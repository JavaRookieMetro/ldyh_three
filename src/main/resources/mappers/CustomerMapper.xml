<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bj.ldyh.dao.CustomerMapper">
    <resultMap id="BaseResultMap" type="org.bj.ldyh.model.Customer">
        <constructor>
            <idArg column="cid" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="industry" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="importance" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gender" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <resultMap id="industryMap" type="org.bj.ldyh.model.Customer">
        <constructor>
            <arg column="industry" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    cid, name, age, industry, address, importance, gender, createTime, updateTime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        where cid = #{cid,jdbcType=INTEGER}
    </select>
    <select id="selectList" parameterType="org.bj.ldyh.model.Customer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        <where>
            <if test="cid != null">
                and cid = #{cid, jdbcType=INTEGER}
            </if>
            <if test="name != null">
                and name = #{name, jdbcType=VARCHAR}
            </if>
            <if test="age != null">
                and age = #{name, jdbcType=INTEGER}
            </if>
            <if test="industry != null">
                and industry = #{industry, jdbcType=VARCHAR}
            </if>
            <if test="address != null">
                and address = #{address, jdbcType=VARCHAR}
            </if>
            <if test="importance != null">
                and importance = #{importance, jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and gender = #{gender, jdbcType=VARCHAR}
            </if>
            <if test="createtime != null">
                and createTime = #{createtime, jdbcType=TIMESTAMP}
            </if>
            <if test="updatetime != null">
                and updateTime = #{updatetime, jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <select id="selectListByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        <where>
            <if test='query != null and query !=""'>
                and concat(name,age,industry,address,importance,gender) like '%${query}%'
            </if>
            <if test="customer.industry != null">
                and industry = #{customer.industry}
            </if>
            <if test="customer.address != null">
                and address = #{customer.address}
            </if>
            <if test="customer.importance != null">
                and importance = #{customer.importance}
            </if>
        </where>
    </select>

    <select id="selectListBySort" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        <where>
            <if test='query != null and query !=""'>
                and concat(name,age,industry,address,importance,gender) like '%${query}%'
            </if>
            <if test="customer.industry != null">
                and industry = #{customer.industry}
            </if>
            <if test="customer.address != null">
                and address = #{customer.address}
            </if>
            <if test="customer.importance != null">
                and importance = #{customer.importance}
            </if>
        </where>
        <if test='sort != null and sort == "name" and dir =="desc"'>
            order by name desc
        </if>
        <if test='sort != null and sort == "name" and dir =="asc"'>
            order by name asc
        </if>
        <if test='sort != null and sort == "age" and dir =="desc"'>
            order by age desc
        </if>
        <if test='sort != null and sort == "age" and dir =="asc"'>
            order by age asc
        </if>
        <if test='sort != null and sort == "industry" and dir == "desc"'>
            order by industry desc
        </if>
        <if test='sort != null and sort == "industry" and dir == "asc"'>
            order by industry asc
        </if>
        <if test='sort != null and sort == "gender" and dir == "desc"'>
            order by gender desc
        </if>
        <if test='sort != null and sort == "gender" and dir == "asc"'>
            order by gender asc
        </if>
        <if test='sort != null and sort == "address" and dir == "desc"'>
            order by address desc
        </if>
        <if test='sort != null and sort == "address" and dir == "asc"'>
            order by address asc
        </if>
        <if test='sort != null and sort == "importance" and dir == "desc"'>
            order by importance desc
        </if>
        <if test='sort != null and sort == "importance" and dir == "asc"'>
            order by importance asc
        </if>
    </select>

    <select id="selectBySearch" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        where concat(name,age,industry,address,importance,gender) like '%${query}%'
        <if test='sort != null and sort == "name" and dir =="desc"'>
            order by name desc
        </if>
        <if test='sort != null and sort == "name" and dir =="asc"'>
            order by name asc
        </if>
        <if test='sort != null and sort == "age" and dir =="desc"'>
            order by age desc
        </if>
        <if test='sort != null and sort == "age" and dir =="asc"'>
            order by age asc
        </if>
        <if test='sort != null and sort == "industry" and dir == "desc"'>
            order by industry desc
        </if>
        <if test='sort != null and sort == "industry" and dir == "asc"'>
            order by industry asc
        </if>
        <if test='sort != null and sort == "gender" and dir == "desc"'>
            order by gender desc
        </if>
        <if test='sort != null and sort == "gender" and dir == "asc"'>
            order by gender asc
        </if>
        <if test='sort != null and sort == "address" and dir == "desc"'>
            order by address desc
        </if>
        <if test='sort != null and sort == "address" and dir == "asc"'>
            order by address asc
        </if>
        <if test='sort != null and sort == "importance" and dir == "desc"'>
            order by importance desc
        </if>
        <if test='sort != null and sort == "importance" and dir == "asc"'>
            order by importance asc
        </if>
    </select>

    <select id="selectSearch" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        where concat(name,age,industry,address,importance,gender) like '%${query}%'
    </select>

    <select id="selectIndustry" parameterType="org.bj.ldyh.model.Customer" resultType="hashmap">
    select industry from customer group by industry
  </select>
    <select id="selectAddress" parameterType="org.bj.ldyh.model.Customer" resultType="hashmap">
    select address from customer group by address
  </select>
    <select id="selectImportance" parameterType="org.bj.ldyh.model.Customer" resultType="hashmap">
    select importance from customer group by importance
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.bj.ldyh.model.Customer">
    insert into customer (cid, name, age, 
      industry, address, importance, 
      gender, createTime, updateTime)
    values (#{cid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{industry,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{importance,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, now(), now())
  </insert>
    <insert id="insertSelective" parameterType="org.bj.ldyh.model.Customer">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="industry != null">
                industry,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="importance != null">
                importance,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="industry != null">
                #{industry,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="importance != null">
                #{importance,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            now(),now()
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.bj.ldyh.model.Customer">
        update customer
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="industry != null">
                industry = #{industry,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="importance != null">
                importance = #{importance,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            updateTime = now()
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.bj.ldyh.model.Customer">
    update customer
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      industry = #{industry,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      importance = #{importance,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      updateTime = now()
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>