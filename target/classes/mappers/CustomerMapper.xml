<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bj.ldyh.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="org.bj.ldyh.model.Customer">
    <constructor>
      <idArg column="cid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="industry" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="importance" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gender" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    cid, name, age, industry, address, importance, gender
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <select id="selectBySearch" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where concat(name,age,industry,address,importance,gender) like '%${query}%'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.bj.ldyh.model.Customer">
    insert into customer (cid, name, age, 
      industry, address, importance, 
      gender)
    values (#{cid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{industry,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{importance,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.bj.ldyh.model.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="importance != null">
        importance,
      </if>
      <if test="gender != null">
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="importance != null">
        #{importance,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bj.ldyh.model.Customer">
    update customer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="importance != null">
        importance = #{importance,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bj.ldyh.model.Customer">
    update customer
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      industry = #{industry,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      importance = #{importance,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>